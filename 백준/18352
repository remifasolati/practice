#include <stdio.h>
#include <queue>
#define MAX 300001

std::vector<int> city[MAX];
int visit[MAX];

int bfs(int k, int x){
    visit[x] = 0;
    std::queue<int> q;
    q.push(x);
    int node,size,i,next,cnt=0;
    while(!q.empty()){
        node = q.front();
        q.pop();
        size = city[node].size();
        for(i=0;i<size;i++){
            next = city[node][i];
            if(visit[next] == -1){
                visit[next] = visit[node] + 1;
                if(visit[next] == k) cnt++;
                q.push(next);
            }
        }
    }
    return cnt;
}

int main() {
    int n,m,k,x,i,from,to;
    scanf("%d %d %d %d", &n, &m, &k, &x);
    for(i=1;i<=n;i++) visit[i] = -1;
    for(i=0;i<m;i++){
        scanf("%d %d", &from, &to);
        city[from].push_back(to);
    }
    if(bfs(k,x)){
        for(i=1;i<=n;i++) if(visit[i] == k) printf("%d\n", i);
    }else printf("%d", -1);
    return 0;
}
